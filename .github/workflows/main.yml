# https://github.com/BruceBlink/free-v2ray-node
name: free-v2ray-node

on:
  schedule:
    - cron: '0 */3 * * *'  # 每3小时运行一次（UTC时间）
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '.gitattributes'
      - 'picture'

jobs:
  update-nodes:
    name: Update Proxy Nodes
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run node collector
        run: python main.py
        timeout-minutes: 60
        env:
          MAX_CONCURRENT_TESTS: 50  # 自定义并发数

      - name: Validate output
        id: validation
        run: |
          # 检查文件存在性、大小和基本格式
          if [ ! -f "v2ray.txt" ]; then
            echo "::error::Output file not found"
            exit 1
          fi
          
          filesize=$(wc -c <"v2ray.txt")
          if [ "$filesize" -lt 100 ]; then
            echo "::error::File size too small (${filesize} bytes)"
            exit 2
          fi

      - name: Commit changes
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"s
          
          # 生成智能提交信息
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          commit_hash=$(git rev-parse --short HEAD)
          commit_msg="🌐 Update nodes - ${timestamp} (${commit_hash})"
          
          # 添加所有变更文件
          
          git add v2ray_raw.txt 
          git add v2ray.txt config.yaml
          
          # 仅在存在变更时提交
          if ! git diff-index --quiet HEAD; then
            git commit -m "$commit_msg"
            git pull --rebase  # 防止冲突
            branch_name=${GITHUB_REF#refs/heads/}
            git push origin HEAD:$branch_name
            echo "::notice::Changes pushed successfully"
          else
            echo "::notice::No changes to commit"
          fi

      - name: Cleanup workspace
        if: always()
        run: |
          # 清理临时文件
          find . -type f -name '*.tmp' -delete
          rm -rf ./temp
